"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"cc256ee876e6\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGp1bGlvXFxEb3dubG9hZHNcXEF0bGV0aWNhSHViLUZyb250RW5kXFxBbGV0aWNhSHViXFxzcmNcXGFwcFxcZ2xvYmFscy5jc3MiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJjYzI1NmVlODc2ZTZcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/services/api/baseApi.ts":
/*!*************************************!*\
  !*** ./src/services/api/baseApi.ts ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Base API Service - Classe base para todos os serviços da API\nclass AtleticaHubAPI {\n    async getHeaders() {\n        let includeAuth = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;\n        const headers = {\n            'Content-Type': 'application/json'\n        };\n        if (includeAuth) {\n            try {\n                const firebaseToken = await this.getFirebaseToken();\n                if (firebaseToken) {\n                    headers['Authorization'] = \"Bearer \".concat(firebaseToken);\n                }\n            } catch (error) {\n                console.warn('Erro ao obter Firebase token:', error);\n            }\n        }\n        return headers;\n    }\n    // Obter Firebase ID token atual\n    async getFirebaseToken() {\n        try {\n            if (false) {}\n            const { firebaseService } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../firebase/firebaseService */ \"(app-pages-browser)/./src/services/firebase/firebaseService.ts\"));\n            await firebaseService.initialize();\n            return await firebaseService.getCurrentToken();\n        } catch (error) {\n            console.warn('Erro ao obter Firebase token:', error);\n            return null;\n        }\n    }\n    // Set token method (mantido para compatibilidade, mas não usado)\n    setToken(token) {\n        if (true) {\n            localStorage.setItem('authToken', token);\n            localStorage.setItem('athletica_token', token);\n        }\n    }\n    // Remove token method\n    removeToken() {\n        if (true) {\n            localStorage.removeItem('authToken');\n            localStorage.removeItem('athletica_token');\n        }\n    }\n    async request(endpoint) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const url = \"\".concat(this.baseURL).concat(endpoint);\n        try {\n            // Obter headers base\n            const baseHeaders = await this.getHeaders(options.auth !== false);\n            // Se é FormData, não incluir Content-Type (o navegador define automaticamente)\n            let headers = {};\n            if (options.body instanceof FormData) {\n                // Para FormData, só incluir Authorization se disponível\n                if (baseHeaders['Authorization']) {\n                    headers['Authorization'] = baseHeaders['Authorization'];\n                }\n            } else {\n                // Para outros tipos, usar todos os headers\n                headers = baseHeaders;\n            }\n            const config = {\n                ...options,\n                headers: {\n                    ...headers,\n                    ...options.headers\n                }\n            };\n            console.log(\"\\uD83D\\uDD17 API Request: \".concat(options.method || 'GET', \" \").concat(url));\n            const response = await fetch(url, config);\n            if (!response.ok) {\n                let errorMessage = \"Erro \".concat(response.status, \": \").concat(response.statusText);\n                try {\n                    const errorData = await response.json();\n                    errorMessage = errorData.message || errorData.error || errorMessage;\n                } catch (e) {\n                // Se não conseguir parsear JSON, usar mensagem padrão\n                }\n                if (response.status === 401) {\n                    errorMessage = 'Token ausente ou inválido';\n                }\n                // Silenciar erros comuns que não são problemas reais\n                if (!errorMessage.includes('não encontrado')) {\n                    console.error(\"❌ API Error: \".concat(errorMessage));\n                }\n                throw new Error(errorMessage);\n            }\n            const result = await response.json();\n            return result;\n        } catch (error) {\n            // Silenciar logs de erro para requisições que falham por motivos esperados\n            if (!(error instanceof Error && error.message.includes('não encontrado'))) {\n                console.error(\"❌ API Exception: \".concat(error));\n            }\n            throw error;\n        }\n    }\n    constructor(){\n        // Use environment variable or fallback to production URL\n        this.baseURL = \"https://atleticahubapi.onrender.com\" || 0;\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AtleticaHubAPI);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/api/baseApi.ts\n"));

/***/ })

});